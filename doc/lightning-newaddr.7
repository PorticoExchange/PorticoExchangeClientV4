.\" -*- mode: troff; coding: utf-8 -*-
.TH "LIGHTNING-NEWADDR" "7" "" "Core Lightning 0.12.1" ""
.SH
NAME
.LP
lightning-newaddr -- Command for generating a new address to be used by Core Lightning
.SH
SYNOPSIS
.LP
\fBnewaddr\fR [ \fIaddresstype\fR ]
.SH
DESCRIPTION
.LP
The \fBnewaddr\fR RPC command generates a new address which can
subsequently be used to fund channels managed by the Core Lightning node.
.PP
The funding transaction needs to be confirmed before funds can be used.
.PP
\fIaddresstype\fR specifies the type of address wanted; i.e. \fIp2sh-segwit\fR
(e.g. \fC2MxaozoqWwiUcuD9KKgUSrLFDafLqimT9Ta\fR on bitcoin testnet or
\fC3MZxzq3jBSKNQ2e7dzneo9hy4FvNzmMmt3\fR on bitcoin mainnet) or \fIbech32\fR
(e.g. \fCtb1qu9j4lg5f9rgjyfhvfd905vw46eg39czmktxqgg\fR on bitcoin testnet
or \fCbc1qwqdg6squsna38e46795at95yu9atm8azzmyvckulcc7kytlcckxswvvzej\fR on
bitcoin mainnet). The special value \fIall\fR generates both address types
for the same underlying key.
.PP
If no \fIaddresstype\fR is specified the address generated is a \fIbech32\fR address.
.PP
To send an on-chain payment \fIfrom\fR the Core Lightning node wallet, use \fCwithdraw\fR. 
.SH
RETURN VALUE
.LP
On success, an object is returned, containing:
.IP "\(bu" 2
\fBbech32\fR (string, optional): The bech32 (native segwit) address
.if n \
.sp -1
.if t \
.sp -0.25v
.IP "\(bu" 2
\fBp2sh-segwit\fR (string, optional): The p2sh-wrapped address
.SH
ERRORS
.LP
If an unrecognized address type is requested an error message will be
returned.
.SH
AUTHOR
.LP
Felix <\fIfixone@gmail.com\fR> is mainly responsible.
.SH
SEE ALSO
.LP
lightning-listfunds(7), lightning-fundchannel(7), lightning-withdraw(7), lightning-listtransactions(7)
.SH
RESOURCES
.LP
Main web site: \fIhttps://github.com/ElementsProject/lightning\fR
\" SHA256STAMP:90440fe48b6d132f1d92b9b0c42d2b1b1b65666c2a43a47c1d3abe6bf688a49c
