.\" -*- mode: troff; coding: utf-8 -*-
.TH "LIGHTNING-DISABLEOFFER" "7" "" "Core Lightning 0.12.1" ""
.SH
NAME
.LP
lightning-disableoffer -- Command for removing an offer
.SH
SYNOPSIS
.LP
\fB(WARNING: experimental-offers only)\fR
.PP
\fBdisableoffer\fR \fIoffer_id\fR
.SH
DESCRIPTION
.LP
The \fBdisableoffer\fR RPC command disables an offer, so that no further
invoices will be given out (if made with lightning-offer(7)) or
invoices accepted  (if made with lightning-offerout(7)).
.PP
We currently don't support deletion of offers, so offers are not
forgotten entirely (there may be invoices which refer to this offer).
.SH
EXAMPLE JSON REQUEST
.LP
.EX
{
  \(dqid\(dq: 82,
  \(dqmethod\(dq: \(dqdisableoffer\(dq,
  \(dqparams\(dq: {
    \(dqoffer_id\(dq: \(dq713a16ccd4eb10438bdcfbc2c8276be301020dd9d489c530773ba64f3b33307d \(dq,
  }
}
.EE
.SH
RETURN VALUE
.LP
Note: the returned object is the same format as \fBlistoffers\fR.
.PP
On success, an object is returned, containing:
.IP "\(bu" 2
\fBoffer_id\fR (hex): the merkle hash of the offer (always 64 characters)
.if n \
.sp -1
.if t \
.sp -0.25v
.IP "\(bu" 2
\fBactive\fR (boolean): Whether the offer can produce invoices/payments (always \fIfalse\fR)
.if n \
.sp -1
.if t \
.sp -0.25v
.IP "\(bu" 2
\fBsingle_use\fR (boolean): Whether the offer is disabled after first successful use
.if n \
.sp -1
.if t \
.sp -0.25v
.IP "\(bu" 2
\fBbolt12\fR (string): The bolt12 string representing this offer
.if n \
.sp -1
.if t \
.sp -0.25v
.IP "\(bu" 2
\fBbolt12_unsigned\fR (string): The bolt12 string representing this offer, without signature
.if n \
.sp -1
.if t \
.sp -0.25v
.IP "\(bu" 2
\fBused\fR (boolean): Whether the offer has had an invoice paid / payment made
.if n \
.sp -1
.if t \
.sp -0.25v
.IP "\(bu" 2
\fBlabel\fR (string, optional): The label provided when offer was created
.SH
EXAMPLE JSON RESPONSE
.LP
.EX
{
   \(dqoffer_id\(dq: \(dq053a5c566fbea2681a5ff9c05a913da23e45b95d09ef5bd25d7d408f23da7084\(dq,
   \(dqactive\(dq: false,
   \(dqsingle_use\(dq: false,
   \(dqbolt12\(dq: \(dqlno1qgsqvgnwgcg35z6ee2h3yczraddm72xrfua9uve2rlrm9deu7xyfzrcgqvqcdgq2z9pk7enxv4jjqen0wgs8yatnw3ujz83qkc6rvp4j28rt3dtrn32zkvdy7efhnlrpr5rp5geqxs783wtlj550qs8czzku4nk3pqp6m593qxgunzuqcwkmgqkmp6ty0wyvjcqdguv3pnpukedwn6cr87m89t74h3auyaeg89xkvgzpac70z3m9rn5xzu28c\(dq,
   \(dqused\(dq: false
}

.EE
.SH
AUTHOR
.LP
Rusty Russell <\fIrusty@rustcorp.com.au\fR> is mainly responsible.
.SH
SEE ALSO
.LP
lightning-offer(7), lightning-offerout(7), lightning-listoffers(7).
.SH
RESOURCES
.LP
Main web site: \fIhttps://github.com/ElementsProject/lightning\fR
\" SHA256STAMP:124ade9515fde1919c7a16d08551cc813b9c0087548e5942010137fe5a7912fc
